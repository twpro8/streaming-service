services:
  redis:
    image: redis:7.4
    container_name: redis
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    environment:
      REDIS_PASSWORD: ${REDIS_PASS}
    command: sh -c "redis-server --requirepass \"${REDIS_PASS}\""
    healthcheck:
      test: "redis-cli -a ${REDIS_PASS} -h localhost ping"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - mainnet

  postgres:
    image: postgres:17.2
    container_name: postgres
    env_file:
      - .env
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped
    volumes:
      - ./docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U $POSTGRES_USER -h localhost"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - mainnet

  auth_service:
    container_name: auth_service
    build:
      context: ./services/auth
    ports:
      - "127.0.0.1:8000:8000"
    env_file:
#      - ./services/auth/.env
      - ./services/auth/.env-example
    restart: unless-stopped
    networks:
      - mainnet
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  auth_service_celery_worker:
    container_name: auth_service_celery_worker
    build:
      context: ./services/auth
    env_file:
#      - ./services/auth/.env
      - ./services/auth/.env-example
    command: "uv run celery -A src.tasks.celery_app worker -l INFO"
    restart: unless-stopped
    networks:
      - mainnet
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  auth_service_celery_beat:
    container_name: auth_service_celery_beat
    build:
      context: ./services/auth
    env_file:
#      - ./services/auth/.env
      - ./services/auth/.env-example
    command: "uv run celery -A src.tasks.celery_app beat -l INFO"
    restart: unless-stopped
    networks:
      - mainnet
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  catalog_service:
    container_name: catalog_service
    build:
      context: ./services/catalog
    env_file:
#      - ./services/catalog/.env
      - ./services/catalog/.env-example
    ports:
      - "127.0.0.1:8001:8001"
    restart: unless-stopped
    networks:
      - mainnet
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:

networks:
  mainnet:
    driver: bridge
